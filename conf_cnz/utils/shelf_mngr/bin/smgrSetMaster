#!/bin/bash

## This script tries to set the specified SCB-RP as IPMI Master. 
## It will try to remove mastership from both SCB-RP boards first to avoid
## conflicting mastership. 
## It uses Shelf Management Function 12, querying both SCBs. 
##
## Usage:
##   smgrSetMaster A|B
## It prints
##	 Failed : (reason for failure) - if execution fails. 
##   OK                            - if execution succeeded. 

usage () {
	echo "Sets the specified SCB-RP board as IPMI Master, and the other one as Slave. "
	echo "Usage: $0 A|B"
	exit 1
}	

source `dirname $0`/constants    # include to set constants common for all smgr scripts

if [ $# -ne 1 ]; then usage; fi;
if [ $1 != "A" -a $1 != "B" ]; then usage; fi;

ipSCB=$(`dirname $0`/hwcwrap SCB A IP 169)
slotSCB=$(`dirname $0`/hwcwrap SCB A SLOT)
snmpres=$(snmpset -L o -M $mibspath -v 2c -c public $ipSCB .1.3.6.1.4.1.193.154.2.1.2.1.1.1.12.$slotSCB i 0 2>/tmp/snmperror | grep $intGrep)

if [[ $snmpres =~ $intRegExp ]]; 
then
	if [ ${BASH_REMATCH[1]} != '0' ]
	then
		echo "Failed : snmpset command failed to set SCB-RP A to no master."
		exit 1
	fi;
fi;

ipSCB=$(`dirname $0`/hwcwrap SCB B IP 169)
slotSCB=$(`dirname $0`/hwcwrap SCB B SLOT)
snmpres=$(snmpset -L o -M $mibspath -v 2c -c public $ipSCB .1.3.6.1.4.1.193.154.2.1.2.1.1.1.12.$slotSCB i 0 2>/tmp/snmperror | grep $intGrep)

if [[ $snmpres =~ $intRegExp ]]; 
then
	if [ ${BASH_REMATCH[1]} != '0' ]
	then
		echo "Failed : snmpset command failed to set SCB-RP B to no master."
		exit 1
	fi;
fi;

ipSCB=$(`dirname $0`/hwcwrap SCB $1 IP 169)
slotSCB=$(`dirname $0`/hwcwrap SCB $1 SLOT)
snmpres=$(snmpset -L o -M $mibspath -v 2c -c public $ipSCB .1.3.6.1.4.1.193.154.2.1.2.1.1.1.12.$slotSCB i 1 2>/tmp/snmperror | grep $intGrep)

if [[ $snmpres =~ $intRegExp ]]; 
then
	if [ ${BASH_REMATCH[1]} != '1' ]
	then
		echo "Failed : snmpset command failed to set SCB-RP $1 to master."
		exit 1
	else
		echo "OK"
	fi;
fi;

#
# /etc/rsyslog.conf: rsyslog configuration
#
#################################### MODULES ###########################################

module(load="imuxsock" SysSock.UseSpecialParser="off") #provides support for local system logging (e.g. via logger command)
$ModLoad imklog    # provides kernel logging support (previously done by rklogd)
#module(load="imfile")   #needs to be done just once
module(load="imudp")
module(load="imptcp")
$EscapeControlCharactersOnReceive off
$KLogPermitNonKernelFacility on

#################################### SOURCE #############################################

input(type="imuxsock" Socket="/dev/log" CreatePath="on") # source s_local
input(type="imudp" Address="<this_address>" Port="514") # source s_external

#################################### TEMPLATE ###########################################

#### ACS_AEH ####
template(name="t_acs_aeh_apEvent" type="string" string="%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% %TIMESTAMP:::date-hour%:%TIMESTAMP:::date-minute%:%TIMESTAMP:::date-second% APEvent%msg:::sp-if-no-1st-sp%%msg% \n")
template(name="t_acs_aeh_apEvent_tcp" type="string" string="%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% %TIMESTAMP:::date-hour%:%TIMESTAMP:::date-minute%:%TIMESTAMP:::date-second% APEvent%rawmsg:::sp-if-no-1st-sp%%rawmsg% \n")
template(name="t_acs_aeh_system" type="string" string="%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% %TIMESTAMP:::date-hour%:%TIMESTAMP:::date-minute%:%TIMESTAMP:::date-second% SystemEvent %PROGRAMNAME:::% %HOSTNAME:::% %SYSLOGPRIORITY-TEXT:::%%msg:::sp-if-no-1st-sp%%msg% \n")
template(name="t_acs_aeh_security" type="string" string="%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% %TIMESTAMP:::date-hour%:%TIMESTAMP:::date-minute%:%TIMESTAMP:::date-second% SecurityEvent %PROGRAMNAME:::% %HOSTNAME:::% %SYSLOGPRIORITY-TEXT:::%%msg:::sp-if-no-1st-sp%%msg% \n")
#### ALOG ####
#For cliss commands
template(name="t_acs_alog_cliss" type="string" string="clicommand.notice: sysdate=%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% systime=%TIMESTAMP:::date-hour%%TIMESTAMP:::date-minute%%TIMESTAMP:::date-second% node=%HOSTNAME:::%%msg:::sp-if-no-1st-sp%%msg% \n")
#For netconf commands
template(name="t_acs_alog_netconf" type="string" string="netconfcommand.notice: sysdate=%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% systime=%TIMESTAMP:::date-hour%%TIMESTAMP:::date-minute%%TIMESTAMP:::date-second% node=%HOSTNAME:::%%msg:::sp-if-no-1st-sp%%msg% \n")
#For cmwea commands
template(name="t_acs_alog_cmwea" type="string" string="cmwea.notice: sysdate=%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% systime=%TIMESTAMP:::date-hour%%TIMESTAMP:::date-minute%%TIMESTAMP:::date-second% node=%HOSTNAME:::%%msg:::sp-if-no-1st-sp%%msg% \n") 
#For no template
template(name="t_acs_alog_other" type="string" string="%msg:::sp-if-no-1st-sp%%msg% \n")
#For ap commands
template(name="t_acs_alog_cmd" type="string" string="apcommand.notice: sysdate=%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% systime=%TIMESTAMP:::date-hour%%TIMESTAMP:::date-minute%%TIMESTAMP:::date-second% node=%HOSTNAME:::%%msg:::sp-if-no-1st-sp%%msg% \n")
#Added for AEH imusock management 
template(name="t_acs_aeh_apEvent_usock" type="string" string="%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% %TIMESTAMP:::date-hour%:%TIMESTAMP:::date-minute%:%TIMESTAMP:::date-second% APEvent%rawmsg:9:$% \n")
template(name="t_acs_alog_comtls" type="string" string="comtls.notice: sysdate=%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% systime=%TIMESTAMP:::date-hour%%TIMESTAMP:::date-minute%%TIMESTAMP:::date-second% node=%HOSTNAME:::%%msg:::sp-if-no-1st-sp%%msg% \n")
#Added for SSH events from audispd
template(name="t_acs_alog_clissh" type="string" string="clissh.notice: sysdate=%TIMESTAMP:::date-year%-%TIMESTAMP:::date-month%-%TIMESTAMP:::date-day% systime=%TIMESTAMP:::date-hour%%TIMESTAMP:::date-minute%%TIMESTAMP:::date-second% node=%HOSTNAME:::%%msg:::sp-if-no-1st-sp%%msg% \n")

# Customize hostname field.
set $!stream_hostname = $hostname ;

#Dummy_configuration
ruleset(name="dummy_ruleset") {
}

#################################DYNAMIC DESTINATION FILES###############################
#Skip FTP logs coming from CP
:msg, contains, "Starting Very Secure FTP Daemon" stop
:msg, contains, "Started Very Secure FTP Daemon" stop

#Cron
template(name="t_cronLog" type="string" string="/var/log/%HOSTNAME:::%/cron_log")
cron.* action(name="cron_log_action" type="omfile" dynaFile="t_cronLog" template="t_acs_aeh_system")

#SysLog
template(name="t_syslogLog" type="string" string="/var/log/%HOSTNAME:::%/syslog_log")
syslog.* action(name="syslog_log_action" type="omfile" dynaFile="t_syslogLog" template="t_acs_aeh_system")

#Daemon
template(name="t_daemonLog" type="string" string="/var/log/%HOSTNAME:::%/daemon_log")
daemon.* action(name="daemon_log_action" type="omfile" dynaFile="t_daemonLog" template="t_acs_aeh_system")

#User
template(name="t_userLog" type="string" string="/var/log/%HOSTNAME:::%/user_log")

#FTP
template(name="t_ftpLog" type="string" string="/var/log/%HOSTNAME:::%/ftp_log")

#Ssh
template(name="t_sshLog" type="string" string="/var/log/%HOSTNAME:::%/ssh_log")

#Kernel
template(name="t_kernelLog" type="string" string="/var/log/%HOSTNAME:::%/kernel")
if ( $syslogfacility-text == "kern" or ($app-name == 'kernel' and $syslogfacility-text == 'user') and (not(($msg contains "EVENT" or $msg contains "A1" or $msg contains "A2" or $msg contains "A3" or $msg contains "O1" or $msg contains "O2" or $msg contains "CEASING")))) then
{
  action(name="kernel_log_action" type="omfile" dynaFile="t_kernelLog" template="RSYSLOG_TraditionalFileFormat")
}

#Auth
template(name="t_authLog" type="string" string="/var/log/%HOSTNAME:::%/auth")
auth,authpriv.* action(name="auth_log_action" type="omfile" dynaFile="t_authLog")

#Messages
template(name="t_messagesLog" type="string" string="/var/log/%HOSTNAME:::%/messages")

#This section manages input from AEH unix socket
input(type="imuxsock" Socket="/var/run/ap/acs_aehusock" CreatePath="on")
if ($rawmsg contains "AEHUSOCK" ) then{
        action(name="event_log_usock_action" type="omfile" dynaFile="t_messagesLog" template="t_acs_aeh_apEvent_usock")
        action(name="prc_eva_usock_action" type="ompipe" Pipe="/var/run/ap/acs_prcevmaxfifo" template="t_acs_aeh_apEvent_usock") #pipe of 6 #### ACS_PRC ####
        if ($msg contains "A1" or $msg contains "A2" or $msg contains "A3" or $msg contains "O1" or $msg contains "O2" or $msg contains "CEASING") then
                {
                        action(name="alh_log_usock_action" type="ompipe" Pipe="/var/run/ap/acs_alhfifo" template="t_acs_aeh_apEvent_usock")
                }
}

#audispd logs for sshd login and logout
if ($app-name == 'audispd') then
{
         
        if (($msg contains "sshd") and ((($msg contains "op=PAM:session_open") and ($msg contains "type=USER_START")) or (($msg contains "op=PAM:session_close") and ($msg contains "type=USER_END")) or (($msg contains "op=PAM:authentication") and ($msg contains "type=USER_AUTH") and ($msg contains "res=failed")))) then
        {
                action(name="alog_action_7" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo" template="t_acs_alog_clissh")
                action(name="ssh_test" type="omfile" dynaFile="t_messagesLog" template="t_acs_aeh_security")
        }
       #CISCAT Improvements feature
       #This if condition is added to log the enabled audit rules into security_audit file 
        else if (( $msg contains "key=\"logins\"") or (($msg contains "key=\"time-change\"") and ((not ($msg contains "exe=\"/usr/sbin/chronyd\"")) and (not ($msg contains "exe=\"/usr/sbin/ntpd\"")))) or ( $msg contains "key=\"identity\"") or ( $msg contains "key=\"system-locale\"") or ( $msg contains "key=\"mac-logins\"") or ( $msg contains "key=\"session\"") or ( $msg contains "key=\"scope\"") or ( $msg contains "key=\"modules\"") or ( $msg contains "key=\"shell-cmd\""))  then
        {
           call dummy_ruleset 
        }
        else {
                *.* stop
        }
}


##################################### RULES ################################################
if $programname contains "sshd" then
{
:msg, contains, "Accepted keyboard-interactive/pam" stop
:msg, contains, "Accepted password for" stop
:msg, contains, "Failed password for" stop
:msg, contains, "Disconnected from" stop
:msg, contains, "session closed for user" stop
:msg, contains, "error: PAM" stop
}
if (($programname contains "sshd") and ($msg contains "sshd:account")) then
{
:msg, contains, "Access denied" stop
:msg, contains, "expired" stop
}
auth,authpriv.* action(name="alog_fifo_action" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo")


#3  #### ACS_AEH #### - ApEvent
#3.1
#moved before imfile

#3.2
if ($syslogfacility-text == ["authpriv", "auth"]) and (not(($programname contains "sshd" or $syslogfacility-text == ["user", "ftp", "daemon", "syslog", "cron"]))) then
        {
                action(name="aeh_security_action" type="omfile" dynaFile="t_messagesLog" template="t_acs_aeh_security")
        }

#4  #### ACS_USA ####

if ($fromhost-ip == "127.0.0.1") and ((not ($msg contains "A1")) or $msg contains "A2" or $msg contains "A3" or $msg contains "01" or $msg contains "02" or $msg contains "CEASING" or $msg contains "failoverd" or ($syslogfacility-text == "authpriv" or $syslogfacility-text == "auth") or ($programname == "smartd") or ($msg contains "Authentication failure")) and ($msg contains "Stopping rsyslog daemon" or $msg contains "Stopping LSB" or $msg contains "Stopping auditd daemon" or $msg contains "Stopped ISC DHCPv4 Server" or $msg contains "Stopping acs_prcmand daemon" or $msg contains "Stopping acs_prcispd daemon" or $msg contains "Error response received from LDAP client" or $msg contains "Failed keyboard-interactive" or $msg contains "FAILED LOGIN SESSION" or ($programname == "smartd" and ($syslogseverity-text == "crit" or $syslogseverity == 2 )) or ($msg contains "Authentication failure")) then
    {
        action(name="usa_log_action" type="ompipe" Pipe="/var/run/ap/acs_usafifo" template="t_acs_aeh_system")
    }

#5  #### ACS_ALH ####

#5.1 #### Rif. 3.1 #### ACS_ALH ####

#5.2 #### Remote Case #### TCP
ruleset(name="remotecease")
	{
        if ($rawmsg contains "A1" or $rawmsg contains "A2" or $rawmsg contains "A3" or $rawmsg contains "O1" or $rawmsg contains "O2" or $rawmsg contains "CEASING") then
		{
        action(name="alh_remote_action" type="ompipe" Pipe="/var/run/ap/acs_alhfifo" template="t_acs_aeh_apEvent_tcp")
		}

	}
#Module imptcp used to selec a specific address
input(type="imptcp" port="49153" address="<this_address>" ruleset="remotecease")

#6  #### ACS_PRC ####   Rif. 3.1 #### ACS_AEH #### - ApEvent



#### Filter For ALOG ####

        if ($msg contains "interface=cli") then
                {
                action(name="alog_action_1" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo" template="t_acs_alog_cliss")
                }

	 if ($msg contains "interface=netconf") then
                 {
                 action(name="alog_action_5" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo" template="t_acs_alog_netconf")
                 }

        if ($msg contains "cmwea:") then
                {
                action(name="alog_action_2" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo" template="t_acs_alog_cmwea")
                }

        if ((not(($msg contains "type=SYSCALL") or ($msg contains "type=EXECVE"))) and (($msg contains "audispd:") or ($msg contains "alogapi.notice"))) then
                {
                action(name="alog_action_3" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo" template="t_acs_alog_other")
                }

        if ((($msg contains "type=EXECVE") or ($msg contains "type=SYSCALL")) and not(($msg contains "ldapsearch") and ($msg contains "-w")))  then
                {
                action(name="alog_action_4" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo" template="t_acs_alog_cmd")
                }
	if( (($msg contains "Accepted request") and (($msg contains "lport=9830") or ($msg contains "lport=6513"))) or (($msg contains "Disconnected from") and ($msg contains "ses=") and ($msg contains "acct=")) or ( ($msg contains "Authentication failure") and (($msg contains "lport=9830") or ($msg contains "lport=6513")))) then
                {
                action(name="alog_action_6" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo" template="t_acs_alog_comtls")
                }

#ifdef <peer_address>
#### S_local to External ####

        if $fromhost-ip != "<peer_address>" then
                {
                *.*     @<peer_address>
                }
#endif <peer_address>

#User facility and audispd
if ( $syslogfacility-text == "user" and not ($programname contains "audispd") and not ($msg contains "vsftpd")) then {
   action(name="user_log_action" type="omfile" dynaFile="t_userLog" template="t_acs_aeh_system")
}
#vsftpd for ftp tls
if ($msg contains "vsftpd") then {
   action(name="ftp_log_action" type="omfile" dynaFile="t_ftpLog" template="t_acs_aeh_security")
   action(name="alog_fifo_ftp_action" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo" template="t_acs_aeh_security")
}
#ftp
if ( $syslogfacility-text == "ftp") then {
   action(name="ftp_log_action" type="omfile" dynaFile="t_ftpLog" template="t_acs_aeh_security")
   action(name="alog_fifo_ftp_action" type="ompipe" Pipe="/var/run/ap/acs_alogmainfifo" template="t_acs_aeh_security")
}

#ssh
if ( $programname contains "sshd" and $msg contains "sshd") then {
   action(name="ssh_log_action" type="omfile" dynaFile="t_sshLog" template="t_acs_aeh_security")
}

#LOCAL NODE
if (($msgid != "mml_audit") and ($fromhost-ip == "127.0.0.1" and ($syslogfacility-text != "auth" and $syslogfacility-text != "authpriv")) and (not ($rawmsg contains "AEHUSOCK")) and (not ($msg contains "audispd:")) and (not(($programname contains "sshd" or $msg contains "sshd") or $syslogfacility-text == "user" or $syslogfacility-text == "ftp" or $syslogfacility-text == "daemon" or $syslogfacility-text == "syslog" or $syslogfacility-text == "cron"))) then {
   action(name="local_node_action" type="omfile" dynaFile="t_messagesLog" template="t_acs_aeh_system")
}
#ifdef <peer_address>
#PEER NODE
if (($fromhost-ip == "<peer_address>" and ($syslogfacility-text != "auth" and $syslogfacility-text != "authpriv")) and (not ($rawmsg contains "AEHUSOCK")) and (not ($msg contains "audispd:")) and (not(($programname contains "sshd" or $msg contains "sshd") or $syslogfacility-text == "user" or $syslogfacility-text == "ftp" or $syslogfacility-text == "daemon" or $syslogfacility-text == "syslog" or $syslogfacility-text == "cron"))) then {
   action(name="remote_node_action" type="omfile" dynaFile="t_messagesLog" template="t_acs_aeh_system")
}
#endif <peer_address>

####################################################ELS_Streaming update [start]#################################################################################
### Log entry format local and streaming begin


# CBA-defined log entry format using RFC3339 timestamp with millisecond resolution
# And an alternate version to add a colon after syslogtag, since forwarding messages removes it
# Used when writing LDE-owned syslog log entries to local file (kernel, messages, auth)
$template CBAFormat_mSec, "%timereported:1:23:date-rfc3339%%timereported:27:36:date-rfc3339% %$!stream_hostname% %syslogtag%%msg%\n"
$template CBAFormat_mSec_AddColon, "%timereported:1:23:date-rfc3339%%timereported:27:36:date-rfc3339% %$!stream_hostname% %syslogtag%:%msg%\n"
$ActionFileDefaultTemplate CBAFormat_mSec
#
# RFC5424 log entry format using RFC3339 timestamp with millisecond resolution
# Used when writing registered syslog log entries to local file
$template RFC5424Format_mSec, "<%PRI%>1 %timereported:1:19:date-rfc3339%.%timereported:1:3:date-subseconds%%timereported:::date-tzoffsdirection%%timereported:::date-tzoffshour%:%timereported:::date-tzoffsmin% %$!stream_hostname% %APP-NAME% %PROCID% %MSGID% %STRUCTURED-DATA% %msg%\n"
### Log entry format local and streaming end

### Log entry format forward to SCs begin
# CBA-defined log entry format using RFC3339 timestamp with microsecond resolution
# Used when forwarding nfslogger log entries to control nodes
$template CBAFormat_uSec, "%timereported:::date-rfc3339% %HOSTNAME% %syslogtag%%msg%\n"

# RFC5424 log entry format using RFC3339 timestamp with microsecond resolution
# Used when forwarding syslog log entries to control nodes
$template RFC5424Format_uSec, "<%PRI%>1 %timereported:::date-rfc3339% %HOSTNAME% %APP-NAME% %PROCID% %MSGID% %STRUCTURED-DATA% %msg%\n"
### Log entry format forward to SCs end

### Rebind Interval for SC begin
$ActionSendUDPRebindInterval 1024
### Rebind Interval for SC end

$IncludeConfig /etc/rsyslog.d/*.conf

# This is a backup filter for messages log just in case drop-in configuration generation failed,
# old configuration files cannot be restored.
# Or when all log streams are unregistered with LogM framework, we have to retain messages log.
$template messages_dest, "/var/log/messages"
*.*;auth.none;authpriv.none ?messages_dest;t_acs_aeh_system

##############################################ELS_Streaming update [end]################################################################################

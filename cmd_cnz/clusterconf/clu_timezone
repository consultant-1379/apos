#!/bin/bash

# Funtions

# Changelog
# Updated by XPRANSI
# Date: 27-10-2011

# User-Input validations	

#validation for timezone
 validate_tz() {
		tz=${!1}
                if [ -z $tz ] ; then
                	return 1
		else
			echo $tz | grep ^GMT 
			if [ $? -eq 0 ]; then
				ls /usr/share/zoneinfo/ | grep -w "$tz"
                        	if [ $? != 0 ]; then
					return 2
				else
					return 3
                        	fi
			fi
		echo $tz
		fi
	}

 validate_integer() {
                        int=${!1}
                        if [ -z $int ] ; then
                                return 1
                        else
                        num=$( echo $int | grep -Eq "^[0-9]+$")
                        chk_num=$?
                                if [ $chk_num -eq 1 ] ; then
                                return 1
                                fi
                        fi
                        echo $int
        }

# To delete an existing rule
 delete() {
        word=${!1}
        rule=${!2}
        rule_num=`validate_integer rule`
        if [ $? -ne 0 ]
        then
                help
                echo "Enter rule number as argument. Empty values not accepted "
                exit 1
        fi

        # Calling cluster_parse file to delete rule
        $clu_file $word --delete $rule_num
	}

# To add/modify an existing rule
  add_mod() {
        word=${!1}
        arg=${!2}
        tz=${!3}
        st=${!4}
        w1=$(echo $arg | cut -d : -f 2)
        if [ "$w1" != "$word" ]
         then
                echo "Enter correct format of arguments"
                help
                exit 1
        fi

	if [ $st == "modify" ]
	then 
        	rule=$(echo $arg | cut -d: -f 1)
	        rule_num=`validate_integer rule`
        	if [ $? -ne 0 ]
	        then
        	        help
                	echo "Enter correct format of arguments. "
	                exit 1
        	fi
	fi

        tz_ip=`validate_tz tz`	
	exs=$?
	if [ $exs -eq 2 ]
	then
		ls /usr/share/zoneinfo/Etc/ | grep -w "$tz"
		if [ $? == 0 ]; then
			tz_ip=Etc/$tz
		else
			echo "Not a valid timezone value"
			exit 1
		fi
	else
		if [ $exs -eq 3 ]; then
			tz_ip=$tz
		else	
        		if [ $exs -ne 0 ]
			then
                		help
                		echo "Empty values not accepted "
                		exit 1
        		fi
		fi
	fi

        # Calling cluster_parse file to add timezone rule
        rule="$word $tz_ip"
        chk_rule="$word"
	if [ $st == "modify" ]
	then 
	        $clu_file $word --modify $rule_num $rule $chk_rule
	else
		$clu_file $word --add $rule $chk_rule
	fi
        }

# To display existing timezone rules
 display() {
        $clu_file $word --display
	}

# To display help
help()
{
echo "
Usage: clu_$word <option> <rule>

Options:
-a|--add 	<New-rule>			To add a new $word rule 
-d|--delete 	<Existing-rule-number>		To delete an existing $word rule
-m|--modify 	<rule number>:<new-rule>	To modify an existing $word rule
-D|--display					To display all the existing rules
-h|--help					To display help

Rule: $word <zone>
<zone> 		Eg. GMT+1, Europe/Stockholm
"
}


#Main


pwd=`pwd`
fname="clu_parse"
#clu_file="$pwd/$fname"
clu_file="/opt/ap/apos/bin/clusterconf/$fname"
word="timezone"

if [ -f /cluster/etc/cluster.conf ];then
        clu_Conf_path="/cluster/etc/"
        clu_Conf_file="cluster.conf"
else
        echo -e "\n/cluster/etc/cluster.conf file does not exists"
        exit 1
fi

        if [ -f $clu_file ];then
                if [ -x $clu_file ];then
                 ch=$1
		 arg=$2
		 arg3=$3
		  case $ch in
			--add|-a)
				st="add"
				if [ $# -gt 3 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					add_mod word arg arg3 st
		   	   	fi
				;;
			--delete|-d)
				if [ $# -gt 2 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					delete word arg
		   	   	fi
				;;
			--modify|-m)
				st="modify"
				if [ $# -gt 3 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					add_mod word arg arg3 st
		   	   	fi
				;;
			--display|-D) 
				if [ $# -gt 1 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					display
		   	   	fi
				;;
			--help|-h) 
				if [ $# -gt 1 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					help
				fi
				;;
			*) 	echo -e "\nWrong input format, please follow the below format...\n"
				help
				;;
		  esac 
	else
                        echo -e "\n$clu_file is not executable"
                fi
        else
                echo -e "\n$clu_file file does not exists"
        fi


#!/bin/bash
# Author: Satya Deepthi

# Changelog
# Updated by XPRANSI
# Date: 27-10-2011

# Functions

# User-Input validations	

#validation for type of node
 validate_target() {
			target=${!1}
                        if [ -z $target ] ; then
                                return 1
			else
                        	if [ $target != "control" ]&& [ $target != "payload" ] ; then
 	                        return 1
       				fi                      
			fi
			echo $target
	}

# Validation for host name
 validate_name() {
			hostname=${!1}
                        if [ -z $hostname ] ; then
                                return 1
                        fi
			echo $hostname
	}

# Validation for integer
 validate_integer() {
			int=${!1}
			if [ -z $int ] ; then
				return 1
			else
                        num=$( echo $int | grep -Eq "^[0-9]+$")
                        chk_num=$?
	                        if [ $chk_num -eq 1 ] ; then
                                return 1
				fi
			fi
			echo $int
	}

# To add node rule
 add() {
	word=${!1}
        id=${!2}
        node_type=${!3}
        hostname=${!4}
	id_ip=`validate_integer id`
	if [ $? -ne 0 ]  
	then 
		help	
		echo "Integer value expected for node ID. Empty values not accepted "
		exit 1
	fi

	type_ip=`validate_target node_type`
	if [ $? -ne 0 ] 
	then
		help 
		echo "Node type should be either control or payload. Empty values not accepted "
		exit 1
	fi

	# Calling cluster_parse file to add alarm rule
	rule="$word $id_ip $type_ip $hostname"
	chk_rule="$word $id_ip"
	$clu_file $word --add $rule $chk_rule
	}		

# To delete an existing alarm rule
 delete() {
        word=${!1}
        rule=${!2}
        rule_num=`validate_integer rule`
        if [ $? -ne 0 ]
        then
                help
                echo "Enter rule number as argument. Empty values not accepted "
                exit 1
        fi

        # Calling cluster_parse file to delete boot rule
        $clu_file $word --delete $rule_num

	}

# To add/modify an existing rule
  add_mod() {
	word=${!1}
        arg=${!2}
	id=${!3}
        node_type=${!4}
        hostname=${!5}
	st=${!6}

        w1=$(echo $arg | cut -d : -f 2)
        if [ "$w1" != "$word" ]
         then
                echo "Wrong format"
                help
                exit 1
        fi

	if [ $st == "modify" ]
	then 
	        rule=$(echo $arg | cut -d: -f 1)
        	rule_num=`validate_integer rule`
	        if [ $? -ne 0 ]
        	then
	                help
                	echo "Enter correct format of arguments. "
        	        exit 1
	        fi
        fi
 
        id_ip=`validate_integer id`
        if [ $? -ne 0 ]
        then
                help
                echo "Integer value expected for node ID. Empty values not accepted "
                exit 1
        fi

        type_ip=`validate_target node_type`
        if [ $? -ne 0 ]
        then
                help
                echo "Node type should be either control or payload. Empty values not accepted "
                exit 1
        fi

        # Calling cluster_parse file to add alarm rule
        rule="$word $id_ip $type_ip $hostname"
        chk_rule="$word $id_ip"
	if [ $st == "modify" ]
	then 
        	$clu_file $word --modify $rule_num $rule $chk_rule
	else
		$clu_file $word --add $rule $chk_rule
	fi
        }

# To display existing alarm rules
 display() {
        $clu_file $word --display
	}

# To display help
help()
{
echo "
Usage: clu_node <option> <rule>

Options:
-a|--add 	<New-rule>		To add a new $word rule 
-d|--delete 	<Existing-rule>		To delete an existing $word rule
-m|--modify 	<old-rule> <new-rule>	To modify an existing $word rule
-D|--display				To display all the existing rules
-h|--help				To display help

Rule: $word <ID> <node type> <hostname>
<ID> 			ID of the node (integer)
<node type> 		<control|payload>
<hostname> 		<Hostname of the node>
"
}


#Main


pwd=`pwd`
fname="clu_parse"
clu_file="/opt/ap/apos/bin/clusterconf/$fname"
word="node"

if [ -f /cluster/etc/cluster.conf ];then
        clu_Conf_path="/cluster/etc/"
        clu_Conf_file="cluster.conf"
else
        echo -e "\n/cluster/etc/cluster.conf file does not exists"
        exit 1
fi

        if [ -f $clu_file ];then
                if [ -x $clu_file ];then
                 ch=$1
		 arg2=$2
		 arg3=$3
		 arg4=$4
	         arg5=$5

		  case $ch in
			--add|-a)
				st="add"
				if [ $# -gt 5 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					add_mod word arg2 arg3 arg4 arg5 st
		   	   	fi
				;;
			--delete|-d)
				if [ $# -gt 2 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					delete word arg2
		   	   	fi
				;;
			--modify|-m)
				st="modify"
				if [ $# -gt 5 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					add_mod word arg2 arg3 arg4 arg5 st
		   	   	fi
				;;
			--display|-D) 
				if [ $# -gt 1 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					display
		   	   	fi
				;;
			--help|-h)
				if [ $# -gt 1 ]; then
                                        echo "Illegal arguments"
                                        help
                                else
					help
				fi
				;;
			*) 	echo -e "\nWrong input format, please follow the below format...\n"
				help
				;;
		  esac 
	else
                        echo -e "\n$clu_file is not executable"
                fi
        else
                echo -e "\n$clu_file file does not exists"
        fi


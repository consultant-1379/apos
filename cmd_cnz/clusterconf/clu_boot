#!/bin/bash
##
# ------------------------------------------------------------------------
#     Copyright (C) 2020 Ericsson AB. All rights reserved.
# ------------------------------------------------------------------------
##
# Name:
#       clu_host.sh
#
# Description:
#   This is an internal command invoked from clusterconf tool.
#   This command is used to validate the input parameters passed to the cluster commands
##
# Author: Satya Deepthi
#
# Changelog:
# - Wed Feb 5 2020 - Yeswanth Vankayala (xyesvan)
#    IPv6 Impacts for clu command
# - Thu Oct 27 2011 - Pranshu Sinha (XPRANSI)

# Load the common functions.
. /opt/ap/apos/bin/clusterconf/clu_sc

# To delete an existing boot rule
delete() {
  word=${!1}
  rule=${!2}
  rule_num=$(validate_integer rule)
  if [ $? -ne 0 ]; then
    help
    echo "Enter rule number as argument. Empty values not accepted "
    exit 1
  fi

  # Calling cluster_parse file to delete boot rule
  $clu_file $word --delete $rule_num
}

# To add/modify an existing rule
add_mod() {
  word=${!1}
  arg=${!2}
  ipaddr=${!3}
  status=${!4}

  w1=$(echo $arg | cut -d : -f 2)
  if [ "$w1" != "$word" ]; then
    echo "Wrong format"
    help
    exit 1
  fi

  if [ $status == "modify" ]; then
    rule=$(echo $arg | cut -d: -f 1)
    rule_num=$(validate_integer rule)
    if [ $? -ne 0 ]; then
      help
      echo "Enter correct format of arguments. "
      exit 1
    fi
  fi

  validate_ip $ipaddr
  if [ $? -ne 0 ]; then
    help
    echo "IP address should be of IPv4 or IPv6 address format. Empty values not accepted"
    exit 1
  fi

  # Calling cluster_parse file to modify/add boot rule
  rule="$word $ipaddr"
  chk_rule="$word $ipaddr"
  if [ $status == "modify" ]; then
    $clu_file $word --modify $rule_num $rule $chk_rule
  else
    $clu_file $word --add $rule $chk_rule
  fi
}

# To display existing alarm rules
display() {
  $clu_file $word --display
}

# To display help
help(){
echo "
Usage: clu_$word <option> <rule>

Options:
-a|--add 	<New-rule>			To add a new $word rule 
-d|--delete 	<Existing-rule-number>		To delete an existing $word rule
-m|--modify 	<rule number>:<new-rule>	To modify an existing $word rule
-D|--display					To display all the existing rules
-h|--help					To display help

Rule: $word <IP address>
<IP address> 		Eg. 172.16.67.45, 2010:ae24:123e::1
"
}


#Main
pwd=`pwd`
fname="clu_parse"
clu_file="/opt/ap/apos/bin/clusterconf/$fname"
word="boot"

if [ -f /cluster/etc/cluster.conf ]; then
  clu_Conf_path="/cluster/etc/"
  clu_Conf_file="cluster.conf"
else
  echo -e "\n/cluster/etc/cluster.conf file does not exists"
  exit 1
fi

if [ -f "$clu_file" ]; then
  if [ -x "$clu_file" ]; then
    ch=$1
    arg=$2
    arg3=$3
    case $ch in
       --add|-a)
                st="add"
                if [ $# -gt 3 ]; then
                  echo "Illegal arguments"
                  help
                else
                  add_mod word arg arg3 st
                fi
                ;;
       --delete|-d)  
                   if [ $# -gt 2 ]; then
                     echo "Illegal arguments"
                     help
                   else
                     delete word arg
                   fi
                   ;;
       --modify|-m)
                   st="modify"
                   if [ $# -gt 3 ]; then
                     echo "Illegal arguments"
                     help
                   else
                     add_mod word arg arg3 st
                   fi
                   ;;
       --display|-D) 
                   if [ $# -gt 1 ]; then
                     echo "Illegal arguments"
                     help
                   else
                     display
                   fi
                   ;;
       --help|-h)
                 if [ $# -gt 1 ]; then
                   echo "Illegal arguments"
                   help
                 else 
                   help
                 fi
                 ;;
       *) echo -e "\nWrong input format, please follow the below format...\n"
          help
          ;;
    esac 
  else
    echo -e "\n$clu_file is not executable"
  fi
else
  echo -e "\n$clu_file file does not exists"
fi

